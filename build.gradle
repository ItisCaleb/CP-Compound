import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '3.0.1'
}

group 'com.itiscaleb'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.itiscaleb.cpcompound'
    mainClass = 'com.itiscaleb.cpcompound.CPCompound'
    tasks.run.workingDir = "./build"
    applicationDefaultJvmArgs = ["--add-opens","javafx.controls/com.sun.javafx.scene.control=com.itiscaleb.cpcompound"]
}

javafx {
    version = '17.0.6'
    configuration = 'implementation'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'org.fxmisc.richtext:richtextfx:0.11.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.22.0'
    implementation 'net.sf.sevenzipjbinding:sevenzipjbinding:16.02-2.01'
    implementation 'io.github.palexdev:materialfx:11.17.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-whhg-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fluentui-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-carbonicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-codicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-boxicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-antdesignicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-runestroicons-pack:12.3.1'
    implementation 'lk.vivoxalabs.customstage:CustomStage:1.3.2'
    implementation 'org.kordamp.ikonli:ikonli-coreui-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-lineawesome-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-antdesignicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-boxicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-evaicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-dashicons-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-material-pack:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-material2-pack:12.3.1'

}

test {
    useJUnitPlatform()
}

def currentOS = DefaultNativePlatform.currentOperatingSystem

jlink {
    addExtraDependencies("javafx")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'CP-Compound'
    }
    if (currentOS.isWindows()) {
        jpackage {
            installerType = 'msi'
            //icon = "${project.rootDir}/.msi/opal.ico"
            installerOptions = [
                    '--win-menu',
                    '--win-menu-group', 'ItisCaleb',
                    '--win-shortcut-prompt',
                    '--win-dir-chooser',
                    '--vendor', 'ItisCaleb',
                    '--app-version', "${project.version.toString()}",
            ]
        }
    } else if (currentOS.isLinux()) {
        jpackage {
            installerType = 'rpm'
            //icon = "${project.rootDir}/src/main/resources/images/opal.png"
            installerOptions = [
                    '--linux-shortcut',
                    '--linux-package-name', 'cp-compound',
                    '--app-version', "${project.version.toString()}",
            ]
        }
    } else if (currentOS.isMacOsX()) {
        jpackage {
            installerType = 'dmg'
            //icon = "${project.rootDir}/src/main/resources/images/opal.png"
            installerOptions = [
                    '--mac-package-name', 'CP-Compound',
                    '--mac-package-identifier', 'com.itiscaleb.cpcompound',
                    '--app-version', "${project.version.toString()}",
            ]
        }
    }
}

jlinkZip {
    group = 'distribution'
}

